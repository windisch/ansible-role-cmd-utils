# cd to selected directory
fcd() {
 local dir
 dir=$(find ${1:-.} -path '*/\.*' -prune \
     -o -type d -print 2> /dev/null | fzf +m) &&
 cd "$dir"
}

# repeat history
fhist() {
 print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

# Search the jrnl titles
fjrnl() {
 title=$(jrnl --short | fzf --tac --no-sort) &&
 jrnl -on "$(echo $title | cut -c 1-16)" $1
}

# Kill processes
fkill() {
 local pid
 pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

 if [ "x$pid" != "x" ]
 then
   echo $pid | xargs kill -${1:-9}
 fi
}

# git commit browser
fgitshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# checkout git branches
fgit() {
 local branches branch
 branches=$(git branch -vv --all) &&
 branch=$(echo "$branches" | fzf +m) &&
 git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //" | sed -e 's/remotes\/origin\///g')
}

fgita() {
 file=$(git status --short --untracked-files| fzf | awk '{print $2;}' ) &&
 git add $file 
}
